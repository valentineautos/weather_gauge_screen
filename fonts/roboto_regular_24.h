/*******************************************************************************
 * Size: 24 px
 * Bpp: 1
 * Opts: --bpp 1 --size 24 --no-compress --font RobotoMono-Regular.ttf --symbols abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!,./:0123456789  --format lvgl -o roboto_regular_24.c
 ******************************************************************************/

#ifndef ROBOTO_REGULAR_24
#define ROBOTO_REGULAR_24 1
#endif

#if ROBOTO_REGULAR_24

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap_r_r_24[] = {
    /* U+0020 " " */
    0x0,

    /* U+0021 "!" */
    0xff, 0xff, 0xfc, 0x3, 0xc0,

    /* U+002C "," */
    0x6d, 0xb7, 0x80,

    /* U+002E "." */
    0xff, 0x80,

    /* U+002F "/" */
    0x1, 0x81, 0x80, 0xc0, 0x60, 0x60, 0x30, 0x18,
    0x18, 0xc, 0xc, 0x6, 0x3, 0x3, 0x1, 0x81,
    0x80, 0xc0, 0x60, 0x60, 0x30, 0x0,

    /* U+0030 "0" */
    0x1f, 0x7, 0xf1, 0xc7, 0x70, 0x7c, 0x7, 0x80,
    0xf0, 0x7e, 0x1b, 0xce, 0x7b, 0x8f, 0xc1, 0xf0,
    0x3c, 0x7, 0xc1, 0xdc, 0x71, 0xfc, 0x1f, 0x0,

    /* U+0031 "1" */
    0x6, 0x3f, 0xff, 0x30, 0x60, 0xc1, 0x83, 0x6,
    0xc, 0x18, 0x30, 0x60, 0xc1, 0x83, 0x6,

    /* U+0032 "2" */
    0x1f, 0x7, 0xf9, 0x83, 0xe0, 0x3c, 0x6, 0x0,
    0xc0, 0x18, 0x6, 0x1, 0x80, 0x60, 0x18, 0x6,
    0x1, 0x80, 0x60, 0x18, 0x7, 0xff, 0xff, 0xe0,

    /* U+0033 "3" */
    0x1f, 0xf, 0xf3, 0x87, 0x60, 0x60, 0xc, 0x1,
    0x80, 0x60, 0xf8, 0x1f, 0x80, 0x38, 0x1, 0x80,
    0x3c, 0x7, 0x80, 0xd8, 0x33, 0xfe, 0x1f, 0x0,

    /* U+0034 "4" */
    0x0, 0xc0, 0x1c, 0x3, 0xc0, 0x7c, 0x6, 0xc0,
    0xcc, 0x1c, 0xc1, 0x8c, 0x30, 0xc7, 0xc, 0x60,
    0xcf, 0xff, 0xff, 0xf0, 0xc, 0x0, 0xc0, 0xc,
    0x0, 0xc0,

    /* U+0035 "5" */
    0x3f, 0xe7, 0xfc, 0xc0, 0x18, 0x6, 0x0, 0xc0,
    0x1b, 0xc3, 0xfe, 0x71, 0xc0, 0x1c, 0x1, 0x80,
    0x3e, 0x6, 0xc0, 0xdc, 0x31, 0xfe, 0x1f, 0x0,

    /* U+0036 "6" */
    0x7, 0x83, 0xf0, 0xe0, 0x38, 0x6, 0x0, 0x9e,
    0x3f, 0xe7, 0x8e, 0xe0, 0xf8, 0xf, 0x1, 0xe0,
    0x3c, 0x6, 0xc1, 0xdc, 0x71, 0xfc, 0x1f, 0x0,

    /* U+0037 "7" */
    0xff, 0xff, 0xff, 0x0, 0x60, 0x6, 0x0, 0xe0,
    0xc, 0x1, 0xc0, 0x18, 0x3, 0x80, 0x30, 0x7,
    0x0, 0x60, 0xe, 0x0, 0xc0, 0x1c, 0x1, 0x80,
    0x18, 0x0,

    /* U+0038 "8" */
    0x3e, 0xf, 0xf3, 0x87, 0x60, 0x6c, 0xd, 0x81,
    0x98, 0x61, 0xf8, 0x3f, 0x8c, 0x1b, 0x1, 0xe0,
    0x3c, 0x7, 0x80, 0xd8, 0x33, 0xfe, 0x1f, 0x0,

    /* U+0039 "9" */
    0x1f, 0x7, 0xf1, 0xc7, 0x70, 0x6c, 0x7, 0x80,
    0xf0, 0x1f, 0x3, 0x71, 0xef, 0xfc, 0x79, 0x80,
    0x30, 0xc, 0x3, 0x80, 0xe1, 0xf8, 0x3c, 0x0,

    /* U+003A ":" */
    0xff, 0x80, 0x0, 0x3, 0xfe,

    /* U+0041 "A" */
    0x6, 0x0, 0x38, 0x1, 0xc0, 0x1e, 0x0, 0xd8,
    0x6, 0xc0, 0x66, 0x3, 0x18, 0x18, 0xc1, 0xc6,
    0xc, 0x38, 0x7f, 0xc7, 0xfe, 0x30, 0x39, 0x80,
    0xdc, 0x6, 0xc0, 0x38,

    /* U+0042 "B" */
    0xff, 0x1f, 0xfb, 0x3, 0xe0, 0x3c, 0x7, 0x80,
    0xf0, 0x37, 0xfc, 0xff, 0xd8, 0x1b, 0x1, 0xe0,
    0x3c, 0x7, 0x80, 0xf0, 0x77, 0xfe, 0xff, 0x0,

    /* U+0043 "C" */
    0xf, 0x3, 0xfc, 0x70, 0xe6, 0x6, 0xc0, 0x7c,
    0x0, 0xc0, 0xc, 0x0, 0xc0, 0xc, 0x0, 0xc0,
    0xc, 0x0, 0xc0, 0x66, 0x6, 0x70, 0xe3, 0xfc,
    0xf, 0x0,

    /* U+0044 "D" */
    0xfe, 0x1f, 0xe3, 0xe, 0x60, 0x6c, 0xd, 0x80,
    0xf0, 0x1e, 0x3, 0xc0, 0x78, 0xf, 0x1, 0xe0,
    0x3c, 0xd, 0x81, 0xb0, 0xe7, 0xf8, 0xfe, 0x0,

    /* U+0045 "E" */
    0xff, 0xff, 0xff, 0x0, 0x60, 0xc, 0x1, 0x80,
    0x30, 0x7, 0xfe, 0xff, 0xd8, 0x3, 0x0, 0x60,
    0xc, 0x1, 0x80, 0x30, 0x7, 0xff, 0xff, 0xe0,

    /* U+0046 "F" */
    0xff, 0xff, 0xff, 0x0, 0x60, 0xc, 0x1, 0x80,
    0x30, 0x6, 0x0, 0xff, 0xdf, 0xfb, 0x0, 0x60,
    0xc, 0x1, 0x80, 0x30, 0x6, 0x0, 0xc0, 0x0,

    /* U+0047 "G" */
    0xf, 0x83, 0xfc, 0x70, 0xe6, 0x7, 0xe0, 0x3c,
    0x0, 0xc0, 0xc, 0x0, 0xc3, 0xfc, 0x3f, 0xc0,
    0x3c, 0x3, 0xe0, 0x36, 0x3, 0x30, 0x73, 0xfe,
    0xf, 0x80,

    /* U+0048 "H" */
    0xc0, 0x78, 0xf, 0x1, 0xe0, 0x3c, 0x7, 0x80,
    0xf0, 0x1f, 0xff, 0xff, 0xf8, 0xf, 0x1, 0xe0,
    0x3c, 0x7, 0x80, 0xf0, 0x1e, 0x3, 0xc0, 0x60,

    /* U+0049 "I" */
    0xff, 0xff, 0xf0, 0xc0, 0x30, 0xc, 0x3, 0x0,
    0xc0, 0x30, 0xc, 0x3, 0x0, 0xc0, 0x30, 0xc,
    0x3, 0x0, 0xc3, 0xff, 0xff, 0xc0,

    /* U+004A "J" */
    0x0, 0x60, 0xc, 0x1, 0x80, 0x30, 0x6, 0x0,
    0xc0, 0x18, 0x3, 0x0, 0x60, 0xc, 0x1, 0x80,
    0x3e, 0x6, 0xc1, 0xdc, 0x71, 0xfc, 0x1f, 0x0,

    /* U+004B "K" */
    0xc0, 0xec, 0x1c, 0xc1, 0x8c, 0x30, 0xc7, 0xc,
    0xe0, 0xdc, 0xd, 0x80, 0xfc, 0xf, 0xe0, 0xe6,
    0xc, 0x70, 0xc3, 0x8c, 0x18, 0xc1, 0xcc, 0xe,
    0xc0, 0x60,

    /* U+004C "L" */
    0xc0, 0x18, 0x3, 0x0, 0x60, 0xc, 0x1, 0x80,
    0x30, 0x6, 0x0, 0xc0, 0x18, 0x3, 0x0, 0x60,
    0xc, 0x1, 0x80, 0x30, 0x7, 0xff, 0xff, 0xe0,

    /* U+004D "M" */
    0xe0, 0xfc, 0x1f, 0x87, 0xf8, 0xff, 0x1f, 0xa6,
    0xf6, 0xde, 0xdb, 0xce, 0x79, 0xcf, 0x39, 0xe2,
    0x3c, 0x7, 0x80, 0xf0, 0x1e, 0x3, 0xc0, 0x60,

    /* U+004E "N" */
    0xc0, 0x7c, 0xf, 0x81, 0xf8, 0x3f, 0x7, 0xb0,
    0xf7, 0x1e, 0x63, 0xce, 0x78, 0xcf, 0x1d, 0xe1,
    0xbc, 0x1f, 0x83, 0xf0, 0x3e, 0x7, 0xc0, 0x60,

    /* U+004F "O" */
    0xf, 0x3, 0xfc, 0x70, 0xe6, 0x6, 0xe0, 0x7c,
    0x3, 0xc0, 0x3c, 0x3, 0xc0, 0x3c, 0x3, 0xc0,
    0x3c, 0x3, 0xe0, 0x76, 0x6, 0x70, 0xe3, 0xfc,
    0xf, 0x0,

    /* U+0050 "P" */
    0xff, 0x1f, 0xfb, 0x3, 0x60, 0x3c, 0x7, 0x80,
    0xf0, 0x1e, 0x6, 0xff, 0xdf, 0xe3, 0x0, 0x60,
    0xc, 0x1, 0x80, 0x30, 0x6, 0x0, 0xc0, 0x0,

    /* U+0051 "Q" */
    0xf, 0x3, 0xfc, 0x70, 0xe6, 0x6, 0xe0, 0x7c,
    0x3, 0xc0, 0x3c, 0x3, 0xc0, 0x3c, 0x3, 0xc0,
    0x3c, 0x3, 0xe0, 0x76, 0x6, 0x70, 0xe3, 0xfc,
    0xf, 0xc0, 0xf, 0x0, 0x30, 0x0,

    /* U+0052 "R" */
    0xff, 0x1f, 0xfb, 0x7, 0x60, 0x3c, 0x7, 0x80,
    0xf0, 0x1e, 0xe, 0xff, 0x9f, 0xe3, 0xc, 0x61,
    0xcc, 0x19, 0x83, 0xb0, 0x36, 0x7, 0xc0, 0x60,

    /* U+0053 "S" */
    0xf, 0x83, 0xfc, 0x30, 0xe6, 0x7, 0x60, 0x36,
    0x0, 0x30, 0x1, 0xc0, 0xf, 0x80, 0x1e, 0x0,
    0x60, 0x3, 0x60, 0x36, 0x3, 0x70, 0x73, 0xfe,
    0xf, 0x80,

    /* U+0054 "T" */
    0xff, 0xff, 0xff, 0xc1, 0x80, 0xc, 0x0, 0x60,
    0x3, 0x0, 0x18, 0x0, 0xc0, 0x6, 0x0, 0x30,
    0x1, 0x80, 0xc, 0x0, 0x60, 0x3, 0x0, 0x18,
    0x0, 0xc0, 0x6, 0x0,

    /* U+0055 "U" */
    0xc0, 0x78, 0xf, 0x1, 0xe0, 0x3c, 0x7, 0x80,
    0xf0, 0x1e, 0x3, 0xc0, 0x78, 0xf, 0x1, 0xe0,
    0x3c, 0x7, 0xc1, 0xdc, 0x71, 0xfc, 0x1f, 0x0,

    /* U+0056 "V" */
    0xc0, 0x3e, 0x3, 0x60, 0x76, 0x6, 0x60, 0x63,
    0x6, 0x30, 0xc3, 0xc, 0x18, 0xc1, 0x98, 0x19,
    0x81, 0xd8, 0xf, 0x80, 0xf0, 0xf, 0x0, 0x70,
    0x6, 0x0,

    /* U+0057 "W" */
    0xc6, 0x1e, 0x38, 0xf1, 0xc7, 0x8e, 0x6c, 0x73,
    0x36, 0x99, 0xb4, 0xcd, 0xb6, 0x6d, 0xb3, 0x4d,
    0x9a, 0x6c, 0xf1, 0x47, 0x8e, 0x3c, 0x70, 0xe3,
    0x86, 0x1c, 0x30, 0xe0,

    /* U+0058 "X" */
    0xe0, 0x33, 0x83, 0x8c, 0x18, 0x71, 0xc1, 0x8c,
    0xe, 0xc0, 0x3e, 0x0, 0xe0, 0x7, 0x0, 0x78,
    0x3, 0x60, 0x3b, 0x1, 0x8c, 0x1c, 0x71, 0xc1,
    0x8c, 0xe, 0xe0, 0x30,

    /* U+0059 "Y" */
    0xc0, 0x3e, 0x7, 0x60, 0x67, 0xe, 0x30, 0xc3,
    0x9c, 0x19, 0x81, 0xf8, 0xf, 0x0, 0xf0, 0x6,
    0x0, 0x60, 0x6, 0x0, 0x60, 0x6, 0x0, 0x60,
    0x6, 0x0,

    /* U+005A "Z" */
    0xff, 0xff, 0xfc, 0x3, 0x80, 0xe0, 0x18, 0x7,
    0x0, 0xc0, 0x30, 0xe, 0x1, 0x80, 0x60, 0x1c,
    0x3, 0x0, 0xc0, 0x38, 0x7, 0xff, 0xff, 0xe0,

    /* U+0061 "a" */
    0x1f, 0x1f, 0xe6, 0x1f, 0x3, 0x0, 0xc7, 0xf7,
    0xff, 0x83, 0xc0, 0xf0, 0x3e, 0x1d, 0xff, 0x3c,
    0xc0,

    /* U+0062 "b" */
    0xc0, 0x18, 0x3, 0x0, 0x60, 0xc, 0x1, 0xbe,
    0x3f, 0xe7, 0xe, 0xc0, 0xf8, 0xf, 0x1, 0xe0,
    0x3c, 0x7, 0x80, 0xf0, 0x3f, 0xe, 0xff, 0x9b,
    0xe0,

    /* U+0063 "c" */
    0x1f, 0x7, 0xf9, 0xc3, 0x70, 0x3c, 0x7, 0x80,
    0x30, 0x6, 0x0, 0xc0, 0x1c, 0xd, 0xc3, 0x1f,
    0xe1, 0xf0,

    /* U+0064 "d" */
    0x0, 0x60, 0xc, 0x1, 0x80, 0x30, 0x6, 0x3e,
    0xcf, 0xfb, 0x87, 0xe0, 0x78, 0xf, 0x1, 0xe0,
    0x3c, 0x7, 0x80, 0xf8, 0x1b, 0x87, 0x3f, 0xe3,
    0xec,

    /* U+0065 "e" */
    0x1f, 0x7, 0xf1, 0xc3, 0x30, 0x3c, 0x7, 0xff,
    0xff, 0xfe, 0x0, 0xc0, 0x1c, 0x9, 0xc3, 0x9f,
    0xe1, 0xf0,

    /* U+0066 "f" */
    0x3, 0xf0, 0x7f, 0xe, 0x0, 0xc0, 0xc, 0x0,
    0xc0, 0xff, 0xef, 0xfe, 0xc, 0x0, 0xc0, 0xc,
    0x0, 0xc0, 0xc, 0x0, 0xc0, 0xc, 0x0, 0xc0,
    0xc, 0x0, 0xc0, 0xc, 0x0,

    /* U+0067 "g" */
    0x1f, 0x67, 0xfd, 0xc3, 0xf0, 0x3c, 0x7, 0x80,
    0xf0, 0x1e, 0x3, 0xc0, 0x7c, 0xd, 0xc3, 0x9f,
    0xf1, 0xf6, 0x0, 0xd0, 0x3b, 0xe, 0x7f, 0xc3,
    0xe0,

    /* U+0068 "h" */
    0xc0, 0x30, 0xc, 0x3, 0x0, 0xc0, 0x33, 0xcd,
    0xfb, 0x87, 0xc0, 0xf0, 0x3c, 0xf, 0x3, 0xc0,
    0xf0, 0x3c, 0xf, 0x3, 0xc0, 0xf0, 0x30,

    /* U+0069 "i" */
    0xc, 0x1, 0x80, 0x0, 0x0, 0xf, 0xc1, 0xf8,
    0x3, 0x0, 0x60, 0xc, 0x1, 0x80, 0x30, 0x6,
    0x0, 0xc0, 0x18, 0x3, 0x7, 0xff, 0xff, 0xe0,

    /* U+006A "j" */
    0x6, 0xc, 0x0, 0x7, 0xef, 0xc1, 0x83, 0x6,
    0xc, 0x18, 0x30, 0x60, 0xc1, 0x83, 0x6, 0xc,
    0x18, 0x6f, 0xdf, 0x0,

    /* U+006B "k" */
    0xc0, 0x18, 0x3, 0x0, 0x60, 0xc, 0x1, 0x83,
    0xb0, 0xe6, 0x38, 0xce, 0x1b, 0x83, 0xe0, 0x7e,
    0xe, 0xe1, 0x8c, 0x30, 0xc6, 0x1c, 0xc1, 0xd8,
    0x1c,

    /* U+006C "l" */
    0xfc, 0x1f, 0x80, 0x30, 0x6, 0x0, 0xc0, 0x18,
    0x3, 0x0, 0x60, 0xc, 0x1, 0x80, 0x30, 0x6,
    0x0, 0xc0, 0x18, 0x3, 0x0, 0x60, 0xff, 0xff,
    0xfc,

    /* U+006D "m" */
    0xdc, 0xef, 0xff, 0xc6, 0x3c, 0x63, 0xc6, 0x3c,
    0x63, 0xc6, 0x3c, 0x63, 0xc6, 0x3c, 0x63, 0xc6,
    0x3c, 0x63, 0xc6, 0x30,

    /* U+006E "n" */
    0xcf, 0x37, 0xee, 0x1f, 0x3, 0xc0, 0xf0, 0x3c,
    0xf, 0x3, 0xc0, 0xf0, 0x3c, 0xf, 0x3, 0xc0,
    0xc0,

    /* U+006F "o" */
    0x1f, 0x7, 0xf1, 0xc7, 0x30, 0x6c, 0x7, 0x80,
    0xf0, 0x1e, 0x3, 0xc0, 0x7c, 0x19, 0xc7, 0x1f,
    0xc1, 0xf0,

    /* U+0070 "p" */
    0xdf, 0x1f, 0xf3, 0x87, 0x60, 0x7c, 0x7, 0x80,
    0xf0, 0x1e, 0x3, 0xc0, 0x78, 0x1f, 0x87, 0x7f,
    0xcd, 0xf1, 0x80, 0x30, 0x6, 0x0, 0xc0, 0x18,
    0x0,

    /* U+0071 "q" */
    0x1f, 0x67, 0xfd, 0xc3, 0xf0, 0x3c, 0x7, 0x80,
    0xf0, 0x1e, 0x3, 0xc0, 0x7c, 0xd, 0xc3, 0x9f,
    0xf1, 0xf6, 0x0, 0xc0, 0x18, 0x3, 0x0, 0x60,
    0xc,

    /* U+0072 "r" */
    0xcf, 0xef, 0xbc, 0x1c, 0xc, 0x6, 0x3, 0x1,
    0x80, 0xc0, 0x60, 0x30, 0x18, 0xc, 0x0,

    /* U+0073 "s" */
    0x1f, 0x7, 0xf9, 0xc3, 0xb0, 0x36, 0x0, 0x70,
    0x7, 0xe0, 0xe, 0x0, 0x78, 0xf, 0x83, 0xbf,
    0xe1, 0xf0,

    /* U+0074 "t" */
    0x18, 0x6, 0x1, 0x83, 0xff, 0xff, 0xc6, 0x1,
    0x80, 0x60, 0x18, 0x6, 0x1, 0x80, 0x60, 0x18,
    0x7, 0x0, 0xfc, 0x1f,

    /* U+0075 "u" */
    0xc0, 0xf0, 0x3c, 0xf, 0x3, 0xc0, 0xf0, 0x3c,
    0xf, 0x3, 0xc0, 0xf0, 0x3e, 0x1d, 0xff, 0x3c,
    0xc0,

    /* U+0076 "v" */
    0xe0, 0x36, 0x7, 0x60, 0x63, 0x6, 0x30, 0xc3,
    0xc, 0x18, 0xc1, 0x98, 0xd, 0x80, 0xd0, 0xf,
    0x0, 0x70, 0x6, 0x0,

    /* U+0077 "w" */
    0xc6, 0x1e, 0x30, 0xf1, 0xc5, 0x8e, 0x6c, 0xf3,
    0x26, 0x99, 0xb6, 0xcd, 0x34, 0x79, 0xa1, 0xc7,
    0xe, 0x38, 0x61, 0xc3, 0xc, 0x0,

    /* U+0078 "x" */
    0x60, 0x73, 0x6, 0x38, 0xc1, 0x9c, 0xf, 0x80,
    0xf0, 0x7, 0x0, 0xf0, 0xd, 0x81, 0x9c, 0x38,
    0xe7, 0x6, 0x60, 0x70,

    /* U+0079 "y" */
    0xc0, 0x37, 0x1, 0x98, 0x18, 0xe0, 0xc3, 0xe,
    0x1c, 0x60, 0x63, 0x3, 0x30, 0xd, 0x80, 0x78,
    0x3, 0xc0, 0xe, 0x0, 0x60, 0x3, 0x0, 0x30,
    0x3, 0x80, 0x78, 0x3, 0x80, 0x0,

    /* U+007A "z" */
    0xff, 0xdf, 0xf8, 0x6, 0x1, 0xc0, 0x70, 0x1c,
    0x3, 0x0, 0xc0, 0x38, 0xe, 0x1, 0x80, 0x7f,
    0xff, 0xfe
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc_r_r_24[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 230, .box_w = 1, .box_h = 1, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1, .adv_w = 230, .box_w = 2, .box_h = 17, .ofs_x = 6, .ofs_y = 0},
    {.bitmap_index = 6, .adv_w = 230, .box_w = 3, .box_h = 7, .ofs_x = 4, .ofs_y = -4},
    {.bitmap_index = 9, .adv_w = 230, .box_w = 3, .box_h = 3, .ofs_x = 6, .ofs_y = 0},
    {.bitmap_index = 11, .adv_w = 230, .box_w = 9, .box_h = 19, .ofs_x = 3, .ofs_y = -2},
    {.bitmap_index = 33, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 57, .adv_w = 230, .box_w = 7, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 72, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 96, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 120, .adv_w = 230, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 146, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 170, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 194, .adv_w = 230, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 220, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 244, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 268, .adv_w = 230, .box_w = 3, .box_h = 13, .ofs_x = 6, .ofs_y = 0},
    {.bitmap_index = 273, .adv_w = 230, .box_w = 13, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 301, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 325, .adv_w = 230, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 351, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 375, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 399, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 423, .adv_w = 230, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 449, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 473, .adv_w = 230, .box_w = 10, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 495, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 519, .adv_w = 230, .box_w = 12, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 545, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 569, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 593, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 617, .adv_w = 230, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 643, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 667, .adv_w = 230, .box_w = 12, .box_h = 20, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 697, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 721, .adv_w = 230, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 747, .adv_w = 230, .box_w = 13, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 775, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 799, .adv_w = 230, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 825, .adv_w = 230, .box_w = 13, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 853, .adv_w = 230, .box_w = 13, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 881, .adv_w = 230, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 907, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 931, .adv_w = 230, .box_w = 10, .box_h = 13, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 948, .adv_w = 230, .box_w = 11, .box_h = 18, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 973, .adv_w = 230, .box_w = 11, .box_h = 13, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 991, .adv_w = 230, .box_w = 11, .box_h = 18, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1016, .adv_w = 230, .box_w = 11, .box_h = 13, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1034, .adv_w = 230, .box_w = 12, .box_h = 19, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1063, .adv_w = 230, .box_w = 11, .box_h = 18, .ofs_x = 2, .ofs_y = -5},
    {.bitmap_index = 1088, .adv_w = 230, .box_w = 10, .box_h = 18, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1111, .adv_w = 230, .box_w = 11, .box_h = 17, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1135, .adv_w = 230, .box_w = 7, .box_h = 22, .ofs_x = 2, .ofs_y = -5},
    {.bitmap_index = 1155, .adv_w = 230, .box_w = 11, .box_h = 18, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1180, .adv_w = 230, .box_w = 11, .box_h = 18, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1205, .adv_w = 230, .box_w = 12, .box_h = 13, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1225, .adv_w = 230, .box_w = 10, .box_h = 13, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1242, .adv_w = 230, .box_w = 11, .box_h = 13, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1260, .adv_w = 230, .box_w = 11, .box_h = 18, .ofs_x = 2, .ofs_y = -5},
    {.bitmap_index = 1285, .adv_w = 230, .box_w = 11, .box_h = 18, .ofs_x = 2, .ofs_y = -5},
    {.bitmap_index = 1310, .adv_w = 230, .box_w = 9, .box_h = 13, .ofs_x = 4, .ofs_y = 0},
    {.bitmap_index = 1325, .adv_w = 230, .box_w = 11, .box_h = 13, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1343, .adv_w = 230, .box_w = 10, .box_h = 16, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1363, .adv_w = 230, .box_w = 10, .box_h = 13, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1380, .adv_w = 230, .box_w = 12, .box_h = 13, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1400, .adv_w = 230, .box_w = 13, .box_h = 13, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1422, .adv_w = 230, .box_w = 12, .box_h = 13, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1442, .adv_w = 230, .box_w = 13, .box_h = 18, .ofs_x = 1, .ofs_y = -5},
    {.bitmap_index = 1472, .adv_w = 230, .box_w = 11, .box_h = 13, .ofs_x = 2, .ofs_y = 0}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/

static const uint16_t unicode_list_0_r_r_24[] = {
    0x0, 0x1, 0xc
};

/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps_r_r_24[] =
{
    {
        .range_start = 32, .range_length = 13, .glyph_id_start = 1,
        .unicode_list = unicode_list_0_r_r_24, .glyph_id_ofs_list = NULL, .list_length = 3, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
    },
    {
        .range_start = 46, .range_length = 13, .glyph_id_start = 4,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    },
    {
        .range_start = 65, .range_length = 26, .glyph_id_start = 17,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    },
    {
        .range_start = 97, .range_length = 26, .glyph_id_start = 43,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LVGL_VERSION_MAJOR == 8
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t cache_r_r_24;
#endif

#if LVGL_VERSION_MAJOR >= 8
static const lv_font_fmt_txt_dsc_t font_dsc_r_r_24 = {
#else
static lv_font_fmt_txt_dsc_t font_dsc_r_r_24 = {
#endif
    .glyph_bitmap = glyph_bitmap_r_r_24,
    .glyph_dsc = glyph_dsc_r_r_24,
    .cmaps = cmaps_r_r_24,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 4,
    .bpp = 1,
    .kern_classes = 0,
    .bitmap_format = 0,
#if LVGL_VERSION_MAJOR == 8
    .cache = &cache_r_r_24
#endif
};



/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LVGL_VERSION_MAJOR >= 8
const lv_font_t roboto_regular_24 = {
#else
lv_font_t roboto_regular_24 = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 24,          /*The maximum line height required by the font*/
    .base_line = 5,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0) || LVGL_VERSION_MAJOR >= 8
    .underline_position = -2,
    .underline_thickness = 1,
#endif
    .dsc = &font_dsc_r_r_24,          /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
#if LV_VERSION_CHECK(8, 2, 0) || LVGL_VERSION_MAJOR >= 9
    .fallback = NULL,
#endif
    .user_data = NULL,
};



#endif /*#if ROBOTO_REGULAR_24*/

